package Application;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.Buffer;

public class App {

    public static void main(String[] args) {
        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        sendGetRequest(url);
    }

    static void sendGetRequest(String urlString){
        try {
            URL url = new URL(urlString);
            HttpURLConnection connection = setUpConnectionObject(url);
            if(connection.getResponseCode() == 200){
                BufferedReader in = getBufferedReaderFromConnection(connection);
                printBufferedReaderContect(in);
                in.close();
            }
        } catch (MalformedURLException e) {
            System.out.println("Sorry, there was a problem creating the URL object,the error was:");
            System.out.println(e.getMessage());
            e.printStackTrace();
        } catch (IOException e) {
            System.out.println("Sorry, there was a problem opening the connection from the URL object, the error was:");
            System.out.println(e.getMessage());
            e.printStackTrace();
        }

    }

    static HttpURLConnection setUpConnectionObject(URL url) throws IOException {
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
        return connection;
    }

    static BufferedReader getBufferedReaderFromConnection(HttpURLConnection connection) throws IOException {
        InputStream inputStream = connection.getInputStream();
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream);   // needs an input stream
        BufferedReader in = new BufferedReader(inputStreamReader);    // I need to provide the reader with a stream reader
        //  BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        return in;
    }

    static void printBufferedReaderContect(BufferedReader in) throws IOException {
        String line = in.readLine();
        while(line != null){
            System.out.println(line);
            line = in.readLine();
        }
    }

}
